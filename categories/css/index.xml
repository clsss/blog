<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Css on Collin&#39;s Blog</title>
    <link>https://clsss.github.io/blog/categories/css/</link>
    <description>Recent content in Css on Collin&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zn-Hans</language>
    <lastBuildDate>Wed, 25 Oct 2017 20:54:11 +0800</lastBuildDate>
    
	<atom:link href="https://clsss.github.io/blog/categories/css/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>webpack-css处理</title>
      <link>https://clsss.github.io/blog/blog/2017-10/webpack-css%E5%A4%84%E7%90%86/</link>
      <pubDate>Wed, 25 Oct 2017 20:54:11 +0800</pubDate>
      
      <guid>https://clsss.github.io/blog/blog/2017-10/webpack-css%E5%A4%84%E7%90%86/</guid>
      <description>css 处理 webpack 是如何引入 css？ style-loader（2. 创建 link 标签） a. style-loader b. style-loader/url（file-loader） c. style-loader/useable（ user()，unuser() ） options:{ insertInto: &#39;#app&#39;， // 插入到app节点 singleton: true, // 是否重用 transform: &#39;./css.transform.js&#39; // 可以做样式的修改 } css-loader（1.import css） option:{ minimize: true, // 压缩css modules: true // 开启css模块化开发 } css modules &amp;gt; 配置 less/sass rules: [ { test: /\.less$/, use:ExtractTextWebpackPlugin.extract([ {},</description>
    </item>
    
  </channel>
</rss>