<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mocha on Collin&#39;s Blog</title>
    <link>https://clsss.github.io/blog/tags/mocha/</link>
    <description>Recent content in Mocha on Collin&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zn-Hans</language>
    <lastBuildDate>Wed, 25 Apr 2018 20:54:11 +0800</lastBuildDate>
    
	<atom:link href="https://clsss.github.io/blog/tags/mocha/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>测试&amp;持续构建</title>
      <link>https://clsss.github.io/blog/blogs/2018-4/mocka/</link>
      <pubDate>Wed, 25 Apr 2018 20:54:11 +0800</pubDate>
      
      <guid>https://clsss.github.io/blog/blogs/2018-4/mocka/</guid>
      <description>测试&amp;amp;持续构建 一. api 测试 频繁地将代码集成到主干 每次集成都通过自动化的构建来验证 优点： 1. 尽早发现错误 防止分支大幅度偏离主干 工具 egg—— https://github.com/eggjs/egg 持续构建： https://travis-ci.org/eggjs/egg 文档： https://docs.travis-ci.com/ benchmark 性能测试 benchmark.js suite .add(&#39;parseInt()&#39;, () =&amp;gt; { num1(&#39;123465&#39;); }) .add(&#39;Number&#39;, () =&amp;gt; { num2(&#39;123456&#39;); }) .on(&#39;cycle&#39;, event =&amp;gt; { console.log(String(event.target)); }) .on(&#39;complete&#39;, function() { console.log(&#39;Fastest is &#39; + this.filter(&#39;fastest&#39;).map(&#39;name&#39;)); }) .run({async: true}); 二. UI 测试 jest 三 爬虫 爬虫: 按照一定的需求自动抓取网络信息 反爬虫: user-agent，referer, 验证码 单位时间访问次数 关键信息用图片混淆 异步加载 使用：suppe</description>
    </item>
    
  </channel>
</rss>