<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>跨域 on Collin&#39;s Blog</title>
    <link>https://clsss.github.io/blog/tags/%E8%B7%A8%E5%9F%9F/</link>
    <description>Recent content in 跨域 on Collin&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zn-Hans</language>
    <lastBuildDate>Sat, 25 Aug 2018 23:12:11 +0800</lastBuildDate>
    
	<atom:link href="https://clsss.github.io/blog/tags/%E8%B7%A8%E5%9F%9F/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>jsonp跨域原理</title>
      <link>https://clsss.github.io/blog/blogs/2018-8/cross_domain/</link>
      <pubDate>Sat, 25 Aug 2018 23:12:11 +0800</pubDate>
      
      <guid>https://clsss.github.io/blog/blogs/2018-8/cross_domain/</guid>
      <description>一. 跨域: 浏览器对于 javascript 的同源策略的限制,例如 a.cn 下面的 js 不能调用 b.cn 中的 js,对象或数据(因为 a.cn 和 b.cn 是不同域),所以跨域就出现了 同源策略: 请求的 url 地址,必须与浏览器上的 url 地址处于同域上,也就是域名,端口,协议相同. 比如:我在本地上的域名是 study.cn,请求另外一个域名一段数据 JSONP 的优点是：它不像 XMLHttpRequest 对象实现的 Ajax 请求那样受到同源策略的限制；它的兼容性更好，在更加古老的浏览器中都可以运行，不需要 XMLHttpRequest 或 ActiveX 的支</description>
    </item>
    
  </channel>
</rss>