<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Css on Collin&#39;s Blog</title>
    <link>https://clsss.github.io/blog/tags/css/</link>
    <description>Recent content in Css on Collin&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zn-Hans</language>
    <lastBuildDate>Wed, 25 Oct 2017 20:54:11 +0800</lastBuildDate>
    
	<atom:link href="https://clsss.github.io/blog/tags/css/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>设计模式-设计原则</title>
      <link>https://clsss.github.io/blog/blog/2017-10/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99/</link>
      <pubDate>Wed, 25 Oct 2017 20:54:11 +0800</pubDate>
      
      <guid>https://clsss.github.io/blog/blog/2017-10/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99/</guid>
      <description>设计模式-设计原则 这是一种思想 1. 单一职责原则（S） 就像.then().then()每个 then 只做一件事 2. 开发封闭原则（O） 新增代码，以前的代码不变 3. 李氏置换原则（L） 子类能覆盖父类 父类出现的地方，子类就能出现 4. 接口独立原则（I） 保持接口独立 5. 依赖导致原则（D） 面向接口编程，依赖于抽象而不依赖于具体 使用方只关注接口不关注具体实现 js 中更多的是关注（S, O） 设计模式-设计模式 这是一种模板 3 大类型： 创建型 工厂</description>
    </item>
    
    <item>
      <title>docker探索</title>
      <link>https://clsss.github.io/blog/blog/1-01/docker%E6%8E%A2%E7%B4%A2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://clsss.github.io/blog/blog/1-01/docker%E6%8E%A2%E7%B4%A2/</guid>
      <description>docker 镜像（Image）+ 容器（Container）+ 仓库（Repository） 下载： linux： sudo wget -qO- http:get.docker.com | sh sudo usermod -aG docker xbf // 不用sodu windows： 官网下载：https://docs.docker.com/engine/installation/ 命令行： #是否docker安装成功 $ docker run hello-world #查看docker信息 $ docker info $ docker -v #获取镜像（使用别人的镜像） $ docker pull [选项] [Docker Registry 地址[:端口号]/]仓库名[:标</description>
    </item>
    
    <item>
      <title>mongoDB环境搭建（window）-8，服务器端</title>
      <link>https://clsss.github.io/blog/blog/1-01/mongodb%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BAwindow-8%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AB%AF/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://clsss.github.io/blog/blog/1-01/mongodb%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BAwindow-8%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AB%AF/</guid>
      <description>一. MongoDB安装（windows）与环境配置 优点： 高可扩展性 分布式存储 低成本 结构灵活 安装注意事项 需要db存储和日志存储文件夹 添加服务，配置环境变量，启动mongod 启动方式： 启动后返回链接的端口 通过命令行传参启动： ``` &amp;lt;!&amp;ndash; dbpath：指定db存储到哪里 &amp;ndash;journal：32位服务器——指定使用journal输出日志 默认存储引擎不能使用： &amp;ndash;&amp;gt; mongod -dbpath F:\mongoDB\data &amp;ndash;journal &amp;ndash;storageEngine=mmapv1 ``` 通过配置文件启动： &amp;lt;!-- 新建的mon</description>
    </item>
    
  </channel>
</rss>