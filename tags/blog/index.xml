<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog on Collin&#39;s Blog</title>
    <link>https://clsss.github.io/blog/tags/blog/</link>
    <description>Recent content in Blog on Collin&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zn-Hans</language>
    <lastBuildDate>Wed, 13 Mar 2019 23:04:40 +0800</lastBuildDate>
    
	<atom:link href="https://clsss.github.io/blog/tags/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Nuxt.js 采坑</title>
      <link>https://clsss.github.io/blog/blogs/2019-3/nuxt_pit/</link>
      <pubDate>Wed, 13 Mar 2019 23:04:40 +0800</pubDate>
      
      <guid>https://clsss.github.io/blog/blogs/2019-3/nuxt_pit/</guid>
      <description>nuxt踩坑合集 官网 github 社区 原因分析 内部原因： 调研时间不足。 撸起袖子就写代码是一个错误的方式，现在回头看m站会发现很多不对的实现方式，个别模块的优化不亚于重写。 技术了解不足，科学的使用方式后知后觉。 构建环境问题（不同环境相同代码，结果不同；打静态页面不可取等）。 插件使用问题(sentry竟会阻塞代码，有待研究)。 文档,API了解不足。 思维方式陈旧。 虽然是基于vue的框架但是使用方式与vue-cli构</description>
    </item>
    
    <item>
      <title>Nuxt.js</title>
      <link>https://clsss.github.io/blog/blogs/2018-12/nuxt/</link>
      <pubDate>Sun, 23 Dec 2018 20:24:11 +0800</pubDate>
      
      <guid>https://clsss.github.io/blog/blogs/2018-12/nuxt/</guid>
      <description>一. Nuxt.js 介绍 vue + vuex + vue-router + SSR + vue-meta 创建即配置。方便 官网 Nuxt.js 是一个基于 Vue.js 的通用应用框架。 通过对客户端/服务端基础架构的抽象组织，Nuxt.js 主要关注的是应用的 UI 渲染。 我们的目标是创建一个灵活的应用框架，你可以基于它初始化新项目的基础结构代码，或者在已有 Node.js 项目中使用 Nuxt.js。 特性 基于 Vue.js 自动代码分层 服务端渲染 强大的路由功能，支持异步数据 静态文件服务 ES6/ES7 语法支持 打包和压缩 JS 和 CSS HTML 头部标签管理 本地开发支持热加</description>
    </item>
    
    <item>
      <title>Redis</title>
      <link>https://clsss.github.io/blog/blogs/2018-6/redis/</link>
      <pubDate>Sun, 23 Dec 2018 20:24:11 +0800</pubDate>
      
      <guid>https://clsss.github.io/blog/blogs/2018-6/redis/</guid>
      <description>一. Redis 介绍 Redis 是一个开源的使用 ANSI C 语言编写、支持网络、可基于内存亦可持久化的日志型、Key-Value 数据库，并提供多种语言的 API。从 2010 年 3 月 15 日起，Redis 的开发工作由 VMware 主持。从 2013 年 5 月开始，Redis 的开发由 Pivotal 赞助。 快速读写 性能： 测试完成了 50 个并发执行 100000 个请求。 设置和获取的值是一个 256 字节字符串。 Linux box 是运行 Linux 2.6,这是 X3320 Xeon 2.5 ghz。 文本执行使用 loopback 接口(127.0.0.1)。 结果:读的速度是 110000</description>
    </item>
    
    <item>
      <title>mongoDB环境搭建，服务器端</title>
      <link>https://clsss.github.io/blog/blogs/2018-6/mongodb/</link>
      <pubDate>Wed, 20 Jun 2018 20:24:11 +0800</pubDate>
      
      <guid>https://clsss.github.io/blog/blogs/2018-6/mongodb/</guid>
      <description>一. MongoDB 介绍 MongoDB 是一个基于分布式文件存储的数据库。由 C++ 语言编写。旨在为 WEB 应用提供可扩展的高性能数据存储解决方案。 MongoDB 是一个介于关系数据库和非关系数据库之间的产品，是非关系数据库当中功能最丰富，最像关系数据库的。 优点： 高可扩展性 分布式存储 低成本 结构灵活 二. 使用 mongoDB 1. 安装 安装方式 # 执行后会返回安装后的路径 which mongod 2. 启动方式： 安装注意事项 需要 db 存储和日志存储文件夹 添加服务，配置环境变量，启动 mongod 方式 1： 打开 cmd 输入 services.msc 查</description>
    </item>
    
    <item>
      <title>docker探索</title>
      <link>https://clsss.github.io/blog/blogs/2018-6/docker/</link>
      <pubDate>Sun, 10 Jun 2018 20:42:11 +0800</pubDate>
      
      <guid>https://clsss.github.io/blog/blogs/2018-6/docker/</guid>
      <description>docker 镜像（Image）+ 容器（Container）+ 仓库（Repository） 下载： linux： sudo wget -qO- http:get.docker.com | sh sudo usermod -aG docker xbf // 不用 sodu windows： 官网下载：https://docs.docker.com/engine/installation/ 命令行： #是否docker安装成功 $ docker run hello-world #查看docker信息 $ docker info $ docker -v #获取镜像（使用别人的镜像） $ docker pull [选项] [Docker Registry 地址[:端口号]/]仓库名[:标签] #</description>
    </item>
    
    <item>
      <title>设计模式-设计原则</title>
      <link>https://clsss.github.io/blog/blogs/2018-5/design/designmode1/</link>
      <pubDate>Sat, 05 May 2018 20:54:11 +0800</pubDate>
      
      <guid>https://clsss.github.io/blog/blogs/2018-5/design/designmode1/</guid>
      <description>设计模式-设计原则（五大原则） 这是一种思想。 1. 单一职责原则（S） 就像.then().then()每个 then 只做一件事 2. 开发封闭原则（O） 新增代码，以前的代码不变 3. 李氏置换原则（L） 子类能覆盖父类 父类出现的地方，子类就能出现 4. 接口独立原则（I） 保持接口独立 5. 依赖导致原则（D） 面向接口编程，依赖于抽象而不依赖于具体 使用方只关注接口不关注具体实现 js 中更多的是关注（S, O）</description>
    </item>
    
    <item>
      <title>Hugo 搭建博客</title>
      <link>https://clsss.github.io/blog/blogs/2017-10/hugo/</link>
      <pubDate>Wed, 25 Oct 2017 20:54:11 +0800</pubDate>
      
      <guid>https://clsss.github.io/blog/blogs/2017-10/hugo/</guid>
      <description>基于 Hogo 快速搭建静态网站 本来使用 Hexo, 也是极好的，素材也很多。但是文章一旦多了。慢速度又怎么让人心安，所以使用 Hugo 作一次尝试。一起来看看如何使用 hugo 搭建自己 blog. 附上中文网 安装 Hugo 工欲兴其事必先利器。 安装 Git 安装 Go 安装 Mercurial 安装 Hugo 具体步骤官网很详细 使用 Windows 的小伙伴就有点难受了。由于地址是国外的，所以没有翻墙的小伙伴，下载靠运气 请确保安装好后添加全局路径 在本地创建自己的站点 在你想创建站点的地方下执行 $ hugo new site [文件夹] # 进入</description>
    </item>
    
  </channel>
</rss>